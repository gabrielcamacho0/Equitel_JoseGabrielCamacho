@page "/usuarios"
@inherits Equitel_JoseGabrielCamacho.Pages.PaginaBase.PaginaBase;
@using System.Data;
@using Equitel_JoseGabrielCamacho.Data;
@using Equitel_JoseGabrielCamacho.DataAccess;

@if (mostrarInfo && Rol != 2)
{
    <div class="container-fluid">
        <h5 class="texto-azul">USUARIOS</h5>

        <div class="mb-3">
            <div class="btn-group align-items-center">
                <a class="btn btn-success" href="/crearusuario">+</a>
            </div>
        </div>

        <div class="tabla-dbversion">
            <table class="table table-striped table-hover">
                <thead>
                    <tr class="align-middle">
                        <th>Id</th>
                        <th>Nombre</th>
                        <th>Logueo</th>
                        <th>Rol</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @if (dtUsuarios.Rows.Count > 0)
                    {
                        @foreach (DataRow usuario in dtUsuarios.Rows)
                        {
                            int _idUsuario = Convert.ToInt32(usuario["Idusuario"]);

                            <tr class="align-middle">
                                <td class="">@usuario["IdUsuario"]</td>
                                
                                
                                <td class="">@usuario["NombreUsuario"]</td>
                                <td class="">@usuario["Logueo"]</td>
                                <td class="">@usuario["Rol"]</td>
                                <td class="">
                                    <div class="btn btn-danger text-center" @onclick='(async (e)=>{await eliminarUsuario(_idUsuario);})'>Eliminar</div>
                                    <div class="btn btn-secondary text-center" @onclick='((e)=>{NavManager.NavigateTo($"/editarusuario?Id={_idUsuario}");})'>Editar</div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
}


@code {
    DataTable dtUsuarios = new DataTable();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await base.OnInitializedAsync();

            dtUsuarios = new UsuarioDA().SelectTable(new Usuario{}, 1);
        }
        catch { }
    }

    protected async Task eliminarUsuario(int idUsuario)
    {
        try
        {
            if (await JSRuntime.InvokeAsync<bool>("confirm", CancellationToken.None, "¿Está seguro de eliminar al usuario?"))
            {
                new UsuarioDA().InsertOrUpdate(new Usuario { IdUsuario = idUsuario }, 5);
                registrarAuditoria($"Se eliminó el usuario ID {idUsuario}");
                dtUsuarios = new UsuarioDA().SelectTable(new Usuario { }, 1);
            }
        }
        catch
        {
            
        }
    }

}
