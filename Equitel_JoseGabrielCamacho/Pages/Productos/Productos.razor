@page "/productos"
@inherits Equitel_JoseGabrielCamacho.Pages.PaginaBase.PaginaBase;
@using System.Data;
@using Equitel_JoseGabrielCamacho.Data;
@using Equitel_JoseGabrielCamacho.DataAccess;

@if (mostrarInfo && Rol != 2)
{
    <div class="container-fluid">
        <h5 class="texto-azul">PRODUCTOS</h5>

        <div class="mb-3">
            <div class="btn-group align-items-center">
                <a class="btn btn-success" href="/crearproducto">+</a>
            </div>
        </div>

        <div class="tabla-dbversion">
            <table class="table table-striped table-hover">
                <thead>
                    <tr class="align-middle">
                        <th>Id</th>
                        <th>Nombre</th>
                        <th>Modelo</th>
                        <th>Valor</th>
                        <th>Proveedor</th>
                        <th>Stock</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @if (dtProductos.Rows.Count > 0)
                    {
                        @foreach (DataRow producto in dtProductos.Rows)
                        {
                            int _idProducto = Convert.ToInt32(producto["IdProducto"]);

                            <tr class="align-middle">
                                <td class="">@producto["IdProducto"]</td>
                                <td class="">@producto["NombreProducto"]</td>
                                <td class="">@producto["ModeloProducto"]</td>
                                <td class="">@producto["ValorProducto"]</td>
                                <td class="">@producto["IdProveedor"]</td>
                                <td class="">@producto["CantidadProducto"]</td>
                                <td class="">
                                    <div class="btn btn-danger text-center" @onclick='(async (e)=>{await eliminarProducto(_idProducto);})'>Eliminar</div>
                                    <div class="btn btn-secondary text-center" @onclick='((e)=>{NavManager.NavigateTo($"/editarProducto?Id={_idProducto}");})'>Editar</div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
}


@code {
    DataTable dtProductos = new DataTable();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await base.OnInitializedAsync();

            dtProductos = new ProductoDA().SelectTable(new Producto { }, 0);
        }
        catch { }
    }

    protected async Task eliminarProducto(int idProducto)
    {
        try
        {
            if (await JSRuntime.InvokeAsync<bool>("confirm", CancellationToken.None, "¿Está seguro de eliminar el producto?"))
            {
                new ProductoDA().InsertOrUpdate(new Producto { IdProducto = idProducto }, 4);
                registrarAuditoria($"Se eliminó el producto ID {idProducto}");
                dtProductos = new ProductoDA().SelectTable(new Producto { }, 0);
            }
        }
        catch
        {
            
        }
    }
}
